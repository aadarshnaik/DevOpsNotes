What is DNS?

Domain Name System which translates the human friendly hostnames into the machine IP addresses
www.google.com => 172.217.18.36
DNS is the backbone of the Internet
DNS uses hierarchical naming structure

DNS Terminologies
    Domain Registrar: A, AAAA, CNAME, NS, ...
    DNS Records: A, AAAA, CNAME, NS, ...
    Zone File: contains DNS records
    Name Server: resolves DNS queries (Authoritative or Non-Authoritative)
    Top Level Domain (TLD): .com, .us, .in, .gov, .org, ... 
    Second Level Domain (SLD): amazon.com, google.com, ...

    http://api.www.example.com

    .com -> TLD
    .example -> SLD
    .www -> Sub Domain
    api -> Domain Name
    http: -> protocol


WEB BROWSER => LOCAL DNS SERVER => ROOT DNS SERVER (Managed by ICANN) 
                                => TLD DNS SERVER (Managed by IANA - Branch of ICANN)
                                => SLD DNS SERVER (Managed by Domain Registrar)


Amazon Route 53
-------------------
A highly available, scalable, fully managed and Authoritative DNS
    Authoritative = the customer (you) can update the DNS records
Route 53 is also a Domain Registrar
Ability to check the health of your resources
The only AWS service which provides 100% availability SLA
Why Route 53? 53 is a reference to the traditional DNS port

Route 53 - Records
    How you want to route traffic for a Domain
    Each record contains:
        Domain/subdomain Name - e.g., example.com
        Record Type - e.g., A or AAAA
        Value - e.g., 12.34.56.78
        Routing Policy - how Route 53 responds to queries
        TTL - amount of time the record cached at DNS Resolvers
    Route 53 supports the following DNS record types:
        A / AAAA / CNAME / NS
        CAA / DS / MX / NAPTR / PTR / SOA / TXT / SPF / SRV

Route 53 - Record Types
    A - maps a hostname to IPv4
    AAAA - maps a hostname to IPv6
    CNAME - maps a hostname to another hostname
        The target is a domain name which must have an A or AAAA record
        Can't create a CNAME record for the top node of a DNS namespace (Zone Apex)
    NS - Name Servers for Hosted Zone
        Control how traffic is routed for a domain

Route 53 - Hosted Zones
    A container for records that define how to route traffic to a domain and its subdomains
    Public Hosted Zones - contains records that specify how to route traffic on the Internet (public domain names) 
                          application1.mypublicdomain.com
    Private Hosted Zones - contain records that specify how you route traffic within one or more VPCs (private domain names)
                           application1.company.internal
    
    $0.50 per month per hosted Zone


Route 53 - Creating Record
----------------------------
Route53 > Hosted Zones > select Domain > Create Record > Enter Details

Route 53 - Records TTL (Time to Live)
---------------------------------------
Client is accessing our DNS Route53 and a webserver
Client sends request myapp.example.com? to Route53 and we get answer from DNS 
which is saying "Hey, This is an A record, here is IP 12.34.56.78 and there is a TTL"
Maybe a TTL of 300 seconds, TTL is saying "Client please cache this result for duration of TTL"

Idea is that we don't want to query the DNS too often because we don't expect records to change a lot
So using the response client has it can access our web server and do HTTP Request and Responses

High TTL - e.g., 24 hr
    Less traffic on Route 53
    Possibly outdated records
Low TTL - e.g., 60 sec.
    More traffic on Route53 ($$)
    Records are outdated for less time 
    Easy to change records

Except for Alias records, TTL is mandatory for each DNS record

CNAME vs Alias
-----------------
AWS Resources (Load Balancer, CloudFront...) expose an AWS hostname:
    lbl-1234.us-east-2.elb.amazonaws.com and you want myapp.mydomain.com

    CNAME:
        Points a hostname to any other hostname. (app.mydomain.com => xyz.anything.com)
        ONLY FOR NON ROOT DOMAIN NAME (eg., something.mydomain.com)
    Alias:
        Points a hostname to an AWS Resource (app.mydomain.com => xyz.amazonaws.com)
        Works for ROOT DOMAIN and NON ROOT DOMAIN (xyz.mydomain.com)
        Free of charge
        Native health check

Route53 - Alias Records
---------------------------
Maps a hostname to an AWS resource
An extension to DNS functionality
Automatically recognizes changes in the resources IP addresses
Unlike CNAME, it can be used for the top node of a DNS namespace (Zone Apex), e.g.: example.com
Alias Record is aloways of type A/AAAA for AWS resources (IPv4/IPv6)
You can't set the TTL

Route53 - Alias Records Targets
---------------------------------
Elastic Load Balancers
CloudFront Distributions
API Gateway
Elastic Beanstalk environments
S3 Websites
VPC Interface Endpoints
Global Accelerator accelerator
Route 53 record in the same hosted Zone
You cannot set an ALIAS record for an EC2 DNS name  

For Apex domains like aadarshnaik.com or stephanetheteacher.com CNAME cannot be created
only Ailas can be created

Route53 - Routing Policies
----------------------------
Define how Route53 responds to DNS queries
DNS doesn't route any traffic, it only responds to the DNS queries
Route53 Supports the following Routing Policies
    Simple
    Weighted
    Failover
    Latency based
    Geolocation
    Multi-Value answer
    Geoproximity (using Route 53 Traffic Flow feature)

Routing Policies - Simple
    Typically, route traffic to a single resource
    Can specify multiple values in the same record
    If multiple values are returned, a random one is chosen by client
    When Alias enabled, specify only one AWS resource
    Can't be associated with Health Checks
Routing Policies - Weighted
    Control the % of requests that go to each specific resource
    Assign each record a relative weight:
        traffic(%) = weight for a specific record / sum of all the weights for all records
        Weights don't need to sum up to 100
    DNS records must have the same sname and type
    Can be associated with health Checks
    Use case: load balancing between regions, testing new application versions...
    Assign a weight of 0 to a record to stop sending traffic to a resource
    If all records have weight 0, then all records will be returned equally
Routing Policies - Latency-based
    Redirect to the resource that has the least latency close to us
    Super helpful when latency for users is a priority
    Latency is based on traffic between users and AWS
    Germany users may be directed to the US (if that's the lawest latency)
    Can be associated with Health Checks (has a failover capability)

    Route53 - Health Checks
        HTTP Health Checks are only for public resources
        Health Check => Automated DNS Failover:
            Health checks that monitor an endpoint (application, server, other AWS resource)
            Health checks that monitor other health checks (Calculated Health Checks)
            Health checks that monitor CloudWatch Alarms (full control !!) - e.g., throttles of DynamoDB, alarms on RDS, custom metrics.
        Health Checks are integrated with CloudWatch metrics

    Health Checks - Monitor an Endpoint
        About 15 global Health checkers will check the endpoint health
            Healthy/Unhealthy Threshold - 3 (default)
            Interval - 30 sec (can set to 10 sec - higher cost)
            Supported protocol: HTTP, HTTPS and TCP
            if >18% of health checkers report the endpoint is healthy, Route 53 considers it Healthy. Otherwise, it's Unhealthy
            Ability to choose which locations you want Route53 to use
        Health Checks can pass only when the endpoint responds with the 2xx and 3xx status codes
        Health checks can be setup to pass/fail based on the text in the first 5120 bytes of the response
        Configure your router/firewall to allow incomming requests from Route53 Health Checkers

    Route53 - Calculated Health Checks  
        Combine the results of multiple Health Checks into a single Health Check
        You use OR, AND or NOT
        Can monitor upto 256 Child Health Checks
        Specify how many of the health checks need to pass to make the parent pass
        Usage: perform maintenance to your website without causing all health checks to fail

    Health Checks - Private Hosted Zones
        Route53 health checkers are outside the VPC 
        They can't access private Endpoints
        You can create a CloudWatch Metric and associate a CloudWatch Alrm, then creata a Health Check that checks the alarm itself

Routing Policy - Failover (Active-Passive)
    There is a primary and secondary instance. In Route53 we have to specify which is primary and secondary and for
    primary which Health Check is to be considered. If primary health check goes Unhealthy then client are redirected 
    to secondary instance

Routing Policies - Geolocation
    Different from Latency-based!
    This routing is based on user location
    Specify location by Continent, Country or by US State (if there's overlapping, most precise location selected)
    Should create a "Default" record (in case there's no match on location)
    Use cases: website localization, restrict content distribution, load balancing, ...
    Can be associated with Health Checks

Geoproximity Routing Policy
    Route traffic to your resources based on the geographic location of users and resources
    Ability to shift more traffic to resources based on the defined bias
    To change the size of the geographic region, Specify bias values:
        To expand (1 to 99) - more traffic to the resources
        To shrink (-1 to -99) - less traffic to the resource
    Resources can be:
        AWS resources (specify AWS region)
        Non-AWS resources (specify Latitude and Longitude)
    You must use Route53 Traffic Flow (advanced) to use this feature

Routing Policy - Multi-Value
    Use when routing tarffic to multiple resources
    Route53 return multiple values/resources
    Can be associated with Health Checks (return only values for healthy resources)
    Up to 8 healthy records are returned for each Multi-Value query
    Multi-Value is not a substitute for having an ELB

    Multi Value might seem like simple routing policy with multiple IP's but simple Routing 
    doesn't have health checks

3rd Party Registrar with Amazon Route53
    If you buy your domain on a 3rd Party registrar, you can still use Route53 as the DNS Service provider

    Create a Hosted Zone in Route53
    Update NS Records on 3rd party website to use Route53 Name Servers

    Domain Registrar != DNS Service
    But every Domain Registrar usually comes with some DNS features
    
